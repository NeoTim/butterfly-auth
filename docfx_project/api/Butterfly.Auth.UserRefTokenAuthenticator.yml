### YamlMime:ManagedReference
items:
- uid: Butterfly.Auth.UserRefTokenAuthenticator
  commentId: T:Butterfly.Auth.UserRefTokenAuthenticator
  id: UserRefTokenAuthenticator
  parent: Butterfly.Auth
  children:
  - Butterfly.Auth.UserRefTokenAuthenticator.#ctor(Butterfly.Db.IDatabase,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Butterfly.Auth.UserRefTokenAuthenticator.AUTH_TYPE
  - Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync(System.String,System.String)
  - Butterfly.Auth.UserRefTokenAuthenticator.authTokenIdFieldName
  - Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableExpiresAtFieldName
  - Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableName
  - Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableUserIdFieldName
  - Butterfly.Auth.UserRefTokenAuthenticator.database
  - Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync(Butterfly.Db.ITransaction,System.String,DateTime)
  - Butterfly.Auth.UserRefTokenAuthenticator.logger
  - Butterfly.Auth.UserRefTokenAuthenticator.userTableAccountIdFieldName
  - Butterfly.Auth.UserRefTokenAuthenticator.userTableName
  - Butterfly.Auth.UserRefTokenAuthenticator.userTableRoleFieldName
  - Butterfly.Auth.UserRefTokenAuthenticator.userTableUsernameFieldName
  langs:
  - csharp
  - vb
  name: UserRefTokenAuthenticator
  nameWithType: UserRefTokenAuthenticator
  fullName: Butterfly.Auth.UserRefTokenAuthenticator
  type: Class
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: UserRefTokenAuthenticator
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 12
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: 'public class UserRefTokenAuthenticator : object, IAuthenticator'
    content.vb: >-
      Public Class UserRefTokenAuthenticator
          Inherits Object
          Implements IAuthenticator
  inheritance:
  - System.Object
  implements:
  - Butterfly.Auth.IAuthenticator
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.Auth.UserRefTokenAuthenticator.logger
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.logger
  id: logger
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: UserRefTokenAuthenticator.logger
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.logger
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: logger
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 13
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected static readonly Logger logger
    return:
      type: Logger
    content.vb: Protected Shared ReadOnly logger As Logger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.AUTH_TYPE
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.AUTH_TYPE
  id: AUTH_TYPE
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: AUTH_TYPE
  nameWithType: UserRefTokenAuthenticator.AUTH_TYPE
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.AUTH_TYPE
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: AUTH_TYPE
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 15
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public const string AUTH_TYPE = null
    return:
      type: System.String
    content.vb: Public Const AUTH_TYPE As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Butterfly.Auth.UserRefTokenAuthenticator.database
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.database
  id: database
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: database
  nameWithType: UserRefTokenAuthenticator.database
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.database
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: database
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 17
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly IDatabase database
    return:
      type: Butterfly.Db.IDatabase
    content.vb: Protected ReadOnly database As IDatabase
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableName
  id: authTokenTableName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: authTokenTableName
  nameWithType: UserRefTokenAuthenticator.authTokenTableName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authTokenTableName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 18
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string authTokenTableName
    return:
      type: System.String
    content.vb: Protected ReadOnly authTokenTableName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.authTokenIdFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.authTokenIdFieldName
  id: authTokenIdFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: authTokenIdFieldName
  nameWithType: UserRefTokenAuthenticator.authTokenIdFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.authTokenIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authTokenIdFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 19
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string authTokenIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly authTokenIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableUserIdFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableUserIdFieldName
  id: authTokenTableUserIdFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: authTokenTableUserIdFieldName
  nameWithType: UserRefTokenAuthenticator.authTokenTableUserIdFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableUserIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authTokenTableUserIdFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 20
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string authTokenTableUserIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly authTokenTableUserIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableExpiresAtFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableExpiresAtFieldName
  id: authTokenTableExpiresAtFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: authTokenTableExpiresAtFieldName
  nameWithType: UserRefTokenAuthenticator.authTokenTableExpiresAtFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.authTokenTableExpiresAtFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authTokenTableExpiresAtFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 21
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string authTokenTableExpiresAtFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly authTokenTableExpiresAtFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.userTableName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.userTableName
  id: userTableName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: userTableName
  nameWithType: UserRefTokenAuthenticator.userTableName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.userTableName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 23
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.userTableUsernameFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.userTableUsernameFieldName
  id: userTableUsernameFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: userTableUsernameFieldName
  nameWithType: UserRefTokenAuthenticator.userTableUsernameFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.userTableUsernameFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableUsernameFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 24
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableUsernameFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableUsernameFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.userTableAccountIdFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.userTableAccountIdFieldName
  id: userTableAccountIdFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: userTableAccountIdFieldName
  nameWithType: UserRefTokenAuthenticator.userTableAccountIdFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.userTableAccountIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableAccountIdFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 25
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableAccountIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableAccountIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.userTableRoleFieldName
  commentId: F:Butterfly.Auth.UserRefTokenAuthenticator.userTableRoleFieldName
  id: userTableRoleFieldName
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: userTableRoleFieldName
  nameWithType: UserRefTokenAuthenticator.userTableRoleFieldName
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.userTableRoleFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableRoleFieldName
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 26
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableRoleFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableRoleFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.UserRefTokenAuthenticator.#ctor(Butterfly.Db.IDatabase,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Butterfly.Auth.UserRefTokenAuthenticator.#ctor(Butterfly.Db.IDatabase,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(Butterfly.Db.IDatabase,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: UserRefTokenAuthenticator(IDatabase, String, String, String, String, String, String, String, String)
  nameWithType: UserRefTokenAuthenticator.UserRefTokenAuthenticator(IDatabase, String, String, String, String, String, String, String, String)
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.UserRefTokenAuthenticator(Butterfly.Db.IDatabase, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: .ctor
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 40
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\n\n"
  example: []
  syntax:
    content: public UserRefTokenAuthenticator(IDatabase database, string authTokenTableName = "auth_token", string authTokenIdFieldName = "id", string authTokenTableUserIdFieldName = "user_id", string authTokenTableExpiresAtFieldName = "expires_at", string userTableName = "user", string userTableUsernameFieldName = "username", string userTableAccountIdFieldName = "account_id", string userTableRoleFieldName = "role")
    parameters:
    - id: database
      type: Butterfly.Db.IDatabase
      description: ''
    - id: authTokenTableName
      type: System.String
      description: Table name of the auth token table (default is &quot;auth_token&quot;)
    - id: authTokenIdFieldName
      type: System.String
      description: Field name of the id field on the auth token table (default is &quot;id&quot;)
    - id: authTokenTableUserIdFieldName
      type: System.String
      description: Field name of the user id field on the auth token table (default is &quot;user_id&quot;)
    - id: authTokenTableExpiresAtFieldName
      type: System.String
      description: Field name of the expires at field on the auth token table (default is &quot;expires_at&quot;)
    - id: userTableName
      type: System.String
      description: Table name of the user table (default is &quot;user&quot;)
    - id: userTableUsernameFieldName
      type: System.String
      description: Field name of the username field on the user table (default is &quot;username&quot;)
    - id: userTableAccountIdFieldName
      type: System.String
      description: Field name of the account id field on the user table (default is &quot;account_id&quot;)
    - id: userTableRoleFieldName
      type: System.String
      description: Field name of the role field on the user table (default is &quot;role&quot;)
    content.vb: Public Sub New(database As IDatabase, authTokenTableName As String = "auth_token", authTokenIdFieldName As String = "id", authTokenTableUserIdFieldName As String = "user_id", authTokenTableExpiresAtFieldName As String = "expires_at", userTableName As String = "user", userTableUsernameFieldName As String = "username", userTableAccountIdFieldName As String = "account_id", userTableRoleFieldName As String = "role")
  overload: Butterfly.Auth.UserRefTokenAuthenticator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync(System.String,System.String)
  commentId: M:Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync(System.String,System.String)
  id: AuthenticateAsync(System.String,System.String)
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(String, String)
  nameWithType: UserRefTokenAuthenticator.AuthenticateAsync(String, String)
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: AuthenticateAsync
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 69
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nValidates the auth token id returning an <xref href=\"Butterfly.Auth.AuthToken\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: public Task<AuthToken> AuthenticateAsync(string authType, string authValue)
    parameters:
    - id: authType
      type: System.String
      description: ''
    - id: authValue
      type: System.String
      description: ''
    return:
      type: Task{Butterfly.Auth.AuthToken}
      description: An <xref href="Butterfly.Auth.AuthToken" data-throw-if-not-resolved="false"></xref> instance
    content.vb: Public Function AuthenticateAsync(authType As String, authValue As String) As Task(Of AuthToken)
  overload: Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync*
  implements:
  - Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync(Butterfly.Db.ITransaction,System.String,DateTime)
  commentId: M:Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync(Butterfly.Db.ITransaction,System.String,DateTime)
  id: InsertAsync(Butterfly.Db.ITransaction,System.String,DateTime)
  parent: Butterfly.Auth.UserRefTokenAuthenticator
  langs:
  - csharp
  - vb
  name: InsertAsync(ITransaction, String, DateTime)
  nameWithType: UserRefTokenAuthenticator.InsertAsync(ITransaction, String, DateTime)
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync(Butterfly.Db.ITransaction, System.String, DateTime)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/UserRefTokenAuthenticator.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: InsertAsync
    path: ../Butterfly.Auth/UserRefTokenAuthenticator.cs
    startLine: 90
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public Task<string> InsertAsync(ITransaction transaction, string userId, DateTime expiresAt)
    parameters:
    - id: transaction
      type: Butterfly.Db.ITransaction
    - id: userId
      type: System.String
    - id: expiresAt
      type: DateTime
    return:
      type: Task{System.String}
    content.vb: Public Function InsertAsync(transaction As ITransaction, userId As String, expiresAt As DateTime) As Task(Of String)
  overload: Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Butterfly.Auth
  commentId: N:Butterfly.Auth
  name: Butterfly.Auth
  nameWithType: Butterfly.Auth
  fullName: Butterfly.Auth
- uid: System.Object
  commentId: T:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Auth.IAuthenticator
  commentId: T:Butterfly.Auth.IAuthenticator
  parent: Butterfly.Auth
  name: IAuthenticator
  nameWithType: IAuthenticator
  fullName: Butterfly.Auth.IAuthenticator
- uid: Logger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: Logger
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Db.IDatabase
  commentId: T:Butterfly.Db.IDatabase
  parent: Butterfly.Db
  name: IDatabase
  nameWithType: IDatabase
  fullName: Butterfly.Db.IDatabase
- uid: Butterfly.Db
  commentId: N:Butterfly.Db
  name: Butterfly.Db
  nameWithType: Butterfly.Db
  fullName: Butterfly.Db
- uid: Butterfly.Auth.UserRefTokenAuthenticator.#ctor*
  commentId: Overload:Butterfly.Auth.UserRefTokenAuthenticator.#ctor
  name: UserRefTokenAuthenticator
  nameWithType: UserRefTokenAuthenticator.UserRefTokenAuthenticator
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.UserRefTokenAuthenticator
- uid: Butterfly.Auth.AuthToken
  commentId: T:Butterfly.Auth.AuthToken
  parent: Butterfly.Auth
  name: AuthToken
  nameWithType: AuthToken
  fullName: Butterfly.Auth.AuthToken
- uid: Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync*
  commentId: Overload:Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync
  name: AuthenticateAsync
  nameWithType: UserRefTokenAuthenticator.AuthenticateAsync
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.AuthenticateAsync
- uid: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  commentId: M:Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  parent: Butterfly.Auth.IAuthenticator
  isExternal: true
  name: AuthenticateAsync(String, String)
  nameWithType: IAuthenticator.AuthenticateAsync(String, String)
  fullName: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String, System.String)
  spec.csharp:
  - uid: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
    name: AuthenticateAsync
    nameWithType: IAuthenticator.AuthenticateAsync
    fullName: Butterfly.Auth.IAuthenticator.AuthenticateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
    name: AuthenticateAsync
    nameWithType: IAuthenticator.AuthenticateAsync
    fullName: Butterfly.Auth.IAuthenticator.AuthenticateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Butterfly.Auth.AuthToken}
  commentId: '!:Task{Butterfly.Auth.AuthToken}'
  definition: Task`1
  name: Task<AuthToken>
  nameWithType: Task<AuthToken>
  fullName: Task<Butterfly.Auth.AuthToken>
  nameWithType.vb: Task(Of AuthToken)
  fullName.vb: Task(Of Butterfly.Auth.AuthToken)
  name.vb: Task(Of AuthToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync*
  commentId: Overload:Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync
  name: InsertAsync
  nameWithType: UserRefTokenAuthenticator.InsertAsync
  fullName: Butterfly.Auth.UserRefTokenAuthenticator.InsertAsync
- uid: Butterfly.Db.ITransaction
  commentId: T:Butterfly.Db.ITransaction
  parent: Butterfly.Db
  name: ITransaction
  nameWithType: ITransaction
  fullName: Butterfly.Db.ITransaction
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
