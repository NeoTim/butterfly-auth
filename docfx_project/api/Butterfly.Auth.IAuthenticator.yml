### YamlMime:ManagedReference
items:
- uid: Butterfly.Auth.IAuthenticator
  commentId: T:Butterfly.Auth.IAuthenticator
  id: IAuthenticator
  parent: Butterfly.Auth
  children:
  - Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IAuthenticator
  nameWithType: IAuthenticator
  fullName: Butterfly.Auth.IAuthenticator
  type: Interface
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Auth/Butterfly.Auth/IAuthenticator.cs
    id: IAuthenticator
    path: ../Butterfly.Auth/IAuthenticator.cs
    startLine: 6
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public interface IAuthenticator
    content.vb: Public Interface IAuthenticator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  commentId: M:Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String,System.String)
  id: AuthenticateAsync(System.String,System.String)
  parent: Butterfly.Auth.IAuthenticator
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(String, String)
  nameWithType: IAuthenticator.AuthenticateAsync(String, String)
  fullName: Butterfly.Auth.IAuthenticator.AuthenticateAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Auth/Butterfly.Auth/IAuthenticator.cs
    id: AuthenticateAsync
    path: ../Butterfly.Auth/IAuthenticator.cs
    startLine: 7
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: Task<AuthToken> AuthenticateAsync(string authType, string authValue)
    parameters:
    - id: authType
      type: System.String
    - id: authValue
      type: System.String
    return:
      type: Task{Butterfly.Auth.AuthToken}
    content.vb: Function AuthenticateAsync(authType As String, authValue As String) As Task(Of AuthToken)
  overload: Butterfly.Auth.IAuthenticator.AuthenticateAsync*
references:
- uid: Butterfly.Auth
  commentId: N:Butterfly.Auth
  name: Butterfly.Auth
  nameWithType: Butterfly.Auth
  fullName: Butterfly.Auth
- uid: Butterfly.Auth.IAuthenticator.AuthenticateAsync*
  commentId: Overload:Butterfly.Auth.IAuthenticator.AuthenticateAsync
  name: AuthenticateAsync
  nameWithType: IAuthenticator.AuthenticateAsync
  fullName: Butterfly.Auth.IAuthenticator.AuthenticateAsync
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task{Butterfly.Auth.AuthToken}
  commentId: '!:Task{Butterfly.Auth.AuthToken}'
  definition: Task`1
  name: Task<AuthToken>
  nameWithType: Task<AuthToken>
  fullName: Task<Butterfly.Auth.AuthToken>
  nameWithType.vb: Task(Of AuthToken)
  fullName.vb: Task(Of Butterfly.Auth.AuthToken)
  name.vb: Task(Of AuthToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
