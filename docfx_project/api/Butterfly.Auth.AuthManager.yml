### YamlMime:ManagedReference
items:
- uid: Butterfly.Auth.AuthManager
  commentId: T:Butterfly.Auth.AuthManager
  id: AuthManager
  parent: Butterfly.Auth
  children:
  - Butterfly.Auth.AuthManager.#ctor(Butterfly.Db.IDatabase,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.String,System.Int32,Task},Func{System.String,System.Int32,Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Action{Version})
  - Butterfly.Auth.AuthManager.accountTableIdFieldName
  - Butterfly.Auth.AuthManager.accountTableName
  - Butterfly.Auth.AuthManager.accountTableShareCodeFieldName
  - Butterfly.Auth.AuthManager.AuthenticateAsync(System.String,System.String)
  - Butterfly.Auth.AuthManager.authenticatorByType
  - Butterfly.Auth.AuthManager.authTokenDurationDays
  - Butterfly.Auth.AuthManager.ConvertInputToDict(System.Object)
  - Butterfly.Auth.AuthManager.CreateAnonymousUserAsync
  - Butterfly.Auth.AuthManager.CreateResetCodeAsync(System.String)
  - Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(Butterfly.Db.ITransaction,System.String,System.String,System.String,System.String)
  - Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(System.String)
  - Butterfly.Auth.AuthManager.database
  - Butterfly.Auth.AuthManager.defaultRole
  - Butterfly.Auth.AuthManager.emailFieldValidator
  - Butterfly.Auth.AuthManager.ForgotPasswordAsync(System.String)
  - Butterfly.Auth.AuthManager.ForgotUsernameAsync(System.String)
  - Butterfly.Auth.AuthManager.getExtraAccountInfo
  - Butterfly.Auth.AuthManager.getExtraUserInfo
  - Butterfly.Auth.AuthManager.GetUserRefToken(Butterfly.Web.WebApi.IWebRequest)
  - Butterfly.Auth.AuthManager.logger
  - Butterfly.Auth.AuthManager.LoginAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Butterfly.Auth.AuthManager.LookupUsernameAsync(System.String,System.String)
  - Butterfly.Auth.AuthManager.nameFieldValidator
  - Butterfly.Auth.AuthManager.onCheckVersion
  - Butterfly.Auth.AuthManager.onEmailVerify
  - Butterfly.Auth.AuthManager.onForgotPassword
  - Butterfly.Auth.AuthManager.onForgotUsername
  - Butterfly.Auth.AuthManager.onPhoneVerify
  - Butterfly.Auth.AuthManager.onRegisterAccount
  - Butterfly.Auth.AuthManager.onRegisterUser
  - Butterfly.Auth.AuthManager.passwordFieldValidator
  - Butterfly.Auth.AuthManager.phoneFieldValidator
  - Butterfly.Auth.AuthManager.RegisterAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Butterfly.Auth.AuthManager.resetCodeLength
  - Butterfly.Auth.AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Butterfly.Auth.AuthManager.resetTokenDurationMinutes
  - Butterfly.Auth.AuthManager.SetupWebApi(Butterfly.Web.WebApi.IWebApi,System.String)
  - Butterfly.Auth.AuthManager.shareCodeAuthenticator
  - Butterfly.Auth.AuthManager.usernameFieldValidator
  - Butterfly.Auth.AuthManager.userRefTokenAuthenticator
  - Butterfly.Auth.AuthManager.userTableAccountIdFieldName
  - Butterfly.Auth.AuthManager.userTableEmailFieldName
  - Butterfly.Auth.AuthManager.userTableEmailVerifiedAtFieldName
  - Butterfly.Auth.AuthManager.userTableFirstNameFieldName
  - Butterfly.Auth.AuthManager.userTableIdFieldName
  - Butterfly.Auth.AuthManager.userTableLastNameFieldName
  - Butterfly.Auth.AuthManager.userTableName
  - Butterfly.Auth.AuthManager.userTablePasswordHashFieldName
  - Butterfly.Auth.AuthManager.userTablePhoneFieldName
  - Butterfly.Auth.AuthManager.userTablePhoneVerifiedAtFieldName
  - Butterfly.Auth.AuthManager.userTableResetCodeExpiresAtFieldName
  - Butterfly.Auth.AuthManager.userTableResetCodeFieldName
  - Butterfly.Auth.AuthManager.userTableRoleFieldName
  - Butterfly.Auth.AuthManager.userTableSaltFieldName
  - Butterfly.Auth.AuthManager.userTableUsernameFieldName
  - Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  - Butterfly.Auth.AuthManager.VERSION_CLEAN_REGEX
  langs:
  - csharp
  - vb
  name: AuthManager
  nameWithType: AuthManager
  fullName: Butterfly.Auth.AuthManager
  type: Class
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: AuthManager
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 83
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nProvides an API to register users, login users, handle forgot password requests, reset password requests, and validate auth tokens. \n"
  remarks: "\nCan be initialized like this...\n<pre><code>    var database = (initialize an IDatabase instance here)\n    var notifyManager = (initialize NotifyManager here)\n    var welcomeEmailNotifyMessage = (load welcome email here)\n    var resetEmailNotifyMessage = (load reset email here)\n    var authManager = new AuthManager(\n        database,\n        defaultRole: &quot;full-access&quot;,\n        onEmailVerify: notifyManager.VerifyAsync,\n        onPhoneVerify: notifyManager.VerifyAsync,\n        onRegister: user => {\n            notifyManager.Queue(welcomeEmailNotifyMessage.Evaluate(user));\n        },\n        onForgotPassword: user => {\n            notifyManager.Queue(resetEmailNotifyMessage.Evaluate(user));\n        }\n    );</code></pre>\nThe following database tables are recommended...\n<pre><code>CREATE TABLE account (\n	id VARCHAR(50) NOT NULL,\n    created_at INT NOT NULL,\n	updated_at INT NOT NULL,\n    PRIMARY KEY(id)\n);\n\nCREATE TABLE user(\n    id VARCHAR(50) NOT NULL,\n    account_id VARCHAR(50) NOT NULL,\n    username VARCHAR(40) NOT NULL,\n    first_name VARCHAR(255) NOT NULL,\n    last_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    email_verified_at INT NULL,\n    phone VARCHAR(20) NULL,\n	phone_verified_at INT NULL,\n	role VARCHAR(25) NULL,\n	salt VARCHAR(40) NOT NULL,\n    password_hash VARCHAR(90) NOT NULL,\n    reset_code VARCHAR(6) NULL,	\n	reset_code_expires_at INT NULL,	\n	created_at INT NOT NULL,\n    updated_at INT NOT NULL,\n	PRIMARY KEY(id),\n	UNIQUE INDEX username(username)\n);\n\nCREATE TABLE auth_token(\n    id VARCHAR(50) NOT NULL,\n    user_id VARCHAR(50) NOT NULL,\n    expires_at INT NOT NULL,\n	created_at INT NOT NULL,\n    PRIMARY KEY(id)\n);</code></pre>\n"
  example: []
  syntax:
    content: 'public class AuthManager : object'
    content.vb: >-
      Public Class AuthManager
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.Auth.AuthManager.logger
  commentId: F:Butterfly.Auth.AuthManager.logger
  id: logger
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: AuthManager.logger
  fullName: Butterfly.Auth.AuthManager.logger
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: logger
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 84
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected static readonly Logger logger
    return:
      type: Logger
    content.vb: Protected Shared ReadOnly logger As Logger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.database
  commentId: F:Butterfly.Auth.AuthManager.database
  id: database
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: database
  nameWithType: AuthManager.database
  fullName: Butterfly.Auth.AuthManager.database
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: database
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 86
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly IDatabase database
    return:
      type: Butterfly.Db.IDatabase
    content.vb: Protected ReadOnly database As IDatabase
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.authTokenDurationDays
  commentId: F:Butterfly.Auth.AuthManager.authTokenDurationDays
  id: authTokenDurationDays
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: authTokenDurationDays
  nameWithType: AuthManager.authTokenDurationDays
  fullName: Butterfly.Auth.AuthManager.authTokenDurationDays
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authTokenDurationDays
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 88
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly int authTokenDurationDays
    return:
      type: System.Int32
    content.vb: Protected ReadOnly authTokenDurationDays As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.resetCodeLength
  commentId: F:Butterfly.Auth.AuthManager.resetCodeLength
  id: resetCodeLength
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: resetCodeLength
  nameWithType: AuthManager.resetCodeLength
  fullName: Butterfly.Auth.AuthManager.resetCodeLength
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: resetCodeLength
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 89
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly int resetCodeLength
    return:
      type: System.Int32
    content.vb: Protected ReadOnly resetCodeLength As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.resetTokenDurationMinutes
  commentId: F:Butterfly.Auth.AuthManager.resetTokenDurationMinutes
  id: resetTokenDurationMinutes
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: resetTokenDurationMinutes
  nameWithType: AuthManager.resetTokenDurationMinutes
  fullName: Butterfly.Auth.AuthManager.resetTokenDurationMinutes
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: resetTokenDurationMinutes
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 90
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly int resetTokenDurationMinutes
    return:
      type: System.Int32
    content.vb: Protected ReadOnly resetTokenDurationMinutes As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.accountTableName
  commentId: F:Butterfly.Auth.AuthManager.accountTableName
  id: accountTableName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: accountTableName
  nameWithType: AuthManager.accountTableName
  fullName: Butterfly.Auth.AuthManager.accountTableName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: accountTableName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 92
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string accountTableName
    return:
      type: System.String
    content.vb: Protected ReadOnly accountTableName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.accountTableIdFieldName
  commentId: F:Butterfly.Auth.AuthManager.accountTableIdFieldName
  id: accountTableIdFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: accountTableIdFieldName
  nameWithType: AuthManager.accountTableIdFieldName
  fullName: Butterfly.Auth.AuthManager.accountTableIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: accountTableIdFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 93
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string accountTableIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly accountTableIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.accountTableShareCodeFieldName
  commentId: F:Butterfly.Auth.AuthManager.accountTableShareCodeFieldName
  id: accountTableShareCodeFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: accountTableShareCodeFieldName
  nameWithType: AuthManager.accountTableShareCodeFieldName
  fullName: Butterfly.Auth.AuthManager.accountTableShareCodeFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: accountTableShareCodeFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 94
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string accountTableShareCodeFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly accountTableShareCodeFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableName
  commentId: F:Butterfly.Auth.AuthManager.userTableName
  id: userTableName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableName
  nameWithType: AuthManager.userTableName
  fullName: Butterfly.Auth.AuthManager.userTableName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 96
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableIdFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableIdFieldName
  id: userTableIdFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableIdFieldName
  nameWithType: AuthManager.userTableIdFieldName
  fullName: Butterfly.Auth.AuthManager.userTableIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableIdFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 97
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableUsernameFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableUsernameFieldName
  id: userTableUsernameFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableUsernameFieldName
  nameWithType: AuthManager.userTableUsernameFieldName
  fullName: Butterfly.Auth.AuthManager.userTableUsernameFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableUsernameFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 98
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableUsernameFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableUsernameFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableEmailFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableEmailFieldName
  id: userTableEmailFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableEmailFieldName
  nameWithType: AuthManager.userTableEmailFieldName
  fullName: Butterfly.Auth.AuthManager.userTableEmailFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableEmailFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 99
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableEmailFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableEmailFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableEmailVerifiedAtFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableEmailVerifiedAtFieldName
  id: userTableEmailVerifiedAtFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableEmailVerifiedAtFieldName
  nameWithType: AuthManager.userTableEmailVerifiedAtFieldName
  fullName: Butterfly.Auth.AuthManager.userTableEmailVerifiedAtFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableEmailVerifiedAtFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 100
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableEmailVerifiedAtFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableEmailVerifiedAtFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTablePhoneFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTablePhoneFieldName
  id: userTablePhoneFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTablePhoneFieldName
  nameWithType: AuthManager.userTablePhoneFieldName
  fullName: Butterfly.Auth.AuthManager.userTablePhoneFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTablePhoneFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 101
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTablePhoneFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTablePhoneFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTablePhoneVerifiedAtFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTablePhoneVerifiedAtFieldName
  id: userTablePhoneVerifiedAtFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTablePhoneVerifiedAtFieldName
  nameWithType: AuthManager.userTablePhoneVerifiedAtFieldName
  fullName: Butterfly.Auth.AuthManager.userTablePhoneVerifiedAtFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTablePhoneVerifiedAtFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 102
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTablePhoneVerifiedAtFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTablePhoneVerifiedAtFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableSaltFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableSaltFieldName
  id: userTableSaltFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableSaltFieldName
  nameWithType: AuthManager.userTableSaltFieldName
  fullName: Butterfly.Auth.AuthManager.userTableSaltFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableSaltFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 103
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableSaltFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableSaltFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTablePasswordHashFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTablePasswordHashFieldName
  id: userTablePasswordHashFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTablePasswordHashFieldName
  nameWithType: AuthManager.userTablePasswordHashFieldName
  fullName: Butterfly.Auth.AuthManager.userTablePasswordHashFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTablePasswordHashFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 104
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTablePasswordHashFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTablePasswordHashFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableFirstNameFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableFirstNameFieldName
  id: userTableFirstNameFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableFirstNameFieldName
  nameWithType: AuthManager.userTableFirstNameFieldName
  fullName: Butterfly.Auth.AuthManager.userTableFirstNameFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableFirstNameFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 105
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableFirstNameFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableFirstNameFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableLastNameFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableLastNameFieldName
  id: userTableLastNameFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableLastNameFieldName
  nameWithType: AuthManager.userTableLastNameFieldName
  fullName: Butterfly.Auth.AuthManager.userTableLastNameFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableLastNameFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 106
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableLastNameFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableLastNameFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableResetCodeFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableResetCodeFieldName
  id: userTableResetCodeFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableResetCodeFieldName
  nameWithType: AuthManager.userTableResetCodeFieldName
  fullName: Butterfly.Auth.AuthManager.userTableResetCodeFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableResetCodeFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 107
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableResetCodeFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableResetCodeFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableResetCodeExpiresAtFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableResetCodeExpiresAtFieldName
  id: userTableResetCodeExpiresAtFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableResetCodeExpiresAtFieldName
  nameWithType: AuthManager.userTableResetCodeExpiresAtFieldName
  fullName: Butterfly.Auth.AuthManager.userTableResetCodeExpiresAtFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableResetCodeExpiresAtFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 108
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableResetCodeExpiresAtFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableResetCodeExpiresAtFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableAccountIdFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableAccountIdFieldName
  id: userTableAccountIdFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableAccountIdFieldName
  nameWithType: AuthManager.userTableAccountIdFieldName
  fullName: Butterfly.Auth.AuthManager.userTableAccountIdFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableAccountIdFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 109
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableAccountIdFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableAccountIdFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userTableRoleFieldName
  commentId: F:Butterfly.Auth.AuthManager.userTableRoleFieldName
  id: userTableRoleFieldName
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userTableRoleFieldName
  nameWithType: AuthManager.userTableRoleFieldName
  fullName: Butterfly.Auth.AuthManager.userTableRoleFieldName
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userTableRoleFieldName
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 110
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string userTableRoleFieldName
    return:
      type: System.String
    content.vb: Protected ReadOnly userTableRoleFieldName As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.defaultRole
  commentId: F:Butterfly.Auth.AuthManager.defaultRole
  id: defaultRole
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: defaultRole
  nameWithType: AuthManager.defaultRole
  fullName: Butterfly.Auth.AuthManager.defaultRole
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: defaultRole
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 112
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly string defaultRole
    return:
      type: System.String
    content.vb: Protected ReadOnly defaultRole As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.getExtraAccountInfo
  commentId: F:Butterfly.Auth.AuthManager.getExtraAccountInfo
  id: getExtraAccountInfo
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: getExtraAccountInfo
  nameWithType: AuthManager.getExtraAccountInfo
  fullName: Butterfly.Auth.AuthManager.getExtraAccountInfo
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: getExtraAccountInfo
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 114
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, System.Collections.Generic.Dictionary<string, object>> getExtraAccountInfo
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}
    content.vb: Protected ReadOnly getExtraAccountInfo As Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.getExtraUserInfo
  commentId: F:Butterfly.Auth.AuthManager.getExtraUserInfo
  id: getExtraUserInfo
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: getExtraUserInfo
  nameWithType: AuthManager.getExtraUserInfo
  fullName: Butterfly.Auth.AuthManager.getExtraUserInfo
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: getExtraUserInfo
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 115
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, System.Collections.Generic.Dictionary<string, object>> getExtraUserInfo
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}
    content.vb: Protected ReadOnly getExtraUserInfo As Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onEmailVerify
  commentId: F:Butterfly.Auth.AuthManager.onEmailVerify
  id: onEmailVerify
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onEmailVerify
  nameWithType: AuthManager.onEmailVerify
  fullName: Butterfly.Auth.AuthManager.onEmailVerify
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onEmailVerify
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 116
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<string, int, Task> onEmailVerify
    return:
      type: Func{System.String,System.Int32,Task}
    content.vb: Protected ReadOnly onEmailVerify As Func(Of String, Integer, Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onPhoneVerify
  commentId: F:Butterfly.Auth.AuthManager.onPhoneVerify
  id: onPhoneVerify
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onPhoneVerify
  nameWithType: AuthManager.onPhoneVerify
  fullName: Butterfly.Auth.AuthManager.onPhoneVerify
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onPhoneVerify
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 117
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<string, int, Task> onPhoneVerify
    return:
      type: Func{System.String,System.Int32,Task}
    content.vb: Protected ReadOnly onPhoneVerify As Func(Of String, Integer, Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onRegisterAccount
  commentId: F:Butterfly.Auth.AuthManager.onRegisterAccount
  id: onRegisterAccount
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onRegisterAccount
  nameWithType: AuthManager.onRegisterAccount
  fullName: Butterfly.Auth.AuthManager.onRegisterAccount
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onRegisterAccount
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 119
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, Task> onRegisterAccount
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
    content.vb: Protected ReadOnly onRegisterAccount As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onRegisterUser
  commentId: F:Butterfly.Auth.AuthManager.onRegisterUser
  id: onRegisterUser
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onRegisterUser
  nameWithType: AuthManager.onRegisterUser
  fullName: Butterfly.Auth.AuthManager.onRegisterUser
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onRegisterUser
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 120
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, Task> onRegisterUser
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
    content.vb: Protected ReadOnly onRegisterUser As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onForgotPassword
  commentId: F:Butterfly.Auth.AuthManager.onForgotPassword
  id: onForgotPassword
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onForgotPassword
  nameWithType: AuthManager.onForgotPassword
  fullName: Butterfly.Auth.AuthManager.onForgotPassword
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onForgotPassword
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 121
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, Task> onForgotPassword
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
    content.vb: Protected ReadOnly onForgotPassword As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onForgotUsername
  commentId: F:Butterfly.Auth.AuthManager.onForgotUsername
  id: onForgotUsername
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onForgotUsername
  nameWithType: AuthManager.onForgotUsername
  fullName: Butterfly.Auth.AuthManager.onForgotUsername
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onForgotUsername
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 122
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Func<System.Collections.Generic.Dictionary<string, object>, Task> onForgotUsername
    return:
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
    content.vb: Protected ReadOnly onForgotUsername As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.onCheckVersion
  commentId: F:Butterfly.Auth.AuthManager.onCheckVersion
  id: onCheckVersion
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: onCheckVersion
  nameWithType: AuthManager.onCheckVersion
  fullName: Butterfly.Auth.AuthManager.onCheckVersion
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: onCheckVersion
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 123
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Action<Version> onCheckVersion
    return:
      type: Action{Version}
    content.vb: Protected ReadOnly onCheckVersion As Action(Of Version)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.usernameFieldValidator
  commentId: F:Butterfly.Auth.AuthManager.usernameFieldValidator
  id: usernameFieldValidator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: usernameFieldValidator
  nameWithType: AuthManager.usernameFieldValidator
  fullName: Butterfly.Auth.AuthManager.usernameFieldValidator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: usernameFieldValidator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 125
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public readonly IFieldValidator usernameFieldValidator
    return:
      type: IFieldValidator
    content.vb: Public ReadOnly usernameFieldValidator As IFieldValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.passwordFieldValidator
  commentId: F:Butterfly.Auth.AuthManager.passwordFieldValidator
  id: passwordFieldValidator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: passwordFieldValidator
  nameWithType: AuthManager.passwordFieldValidator
  fullName: Butterfly.Auth.AuthManager.passwordFieldValidator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: passwordFieldValidator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 126
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public readonly IFieldValidator passwordFieldValidator
    return:
      type: IFieldValidator
    content.vb: Public ReadOnly passwordFieldValidator As IFieldValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.nameFieldValidator
  commentId: F:Butterfly.Auth.AuthManager.nameFieldValidator
  id: nameFieldValidator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: nameFieldValidator
  nameWithType: AuthManager.nameFieldValidator
  fullName: Butterfly.Auth.AuthManager.nameFieldValidator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: nameFieldValidator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 127
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public readonly IFieldValidator nameFieldValidator
    return:
      type: IFieldValidator
    content.vb: Public ReadOnly nameFieldValidator As IFieldValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.emailFieldValidator
  commentId: F:Butterfly.Auth.AuthManager.emailFieldValidator
  id: emailFieldValidator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: emailFieldValidator
  nameWithType: AuthManager.emailFieldValidator
  fullName: Butterfly.Auth.AuthManager.emailFieldValidator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: emailFieldValidator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 128
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public readonly IFieldValidator emailFieldValidator
    return:
      type: IFieldValidator
    content.vb: Public ReadOnly emailFieldValidator As IFieldValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.phoneFieldValidator
  commentId: F:Butterfly.Auth.AuthManager.phoneFieldValidator
  id: phoneFieldValidator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: phoneFieldValidator
  nameWithType: AuthManager.phoneFieldValidator
  fullName: Butterfly.Auth.AuthManager.phoneFieldValidator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: phoneFieldValidator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 129
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public readonly IFieldValidator phoneFieldValidator
    return:
      type: IFieldValidator
    content.vb: Public ReadOnly phoneFieldValidator As IFieldValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.authenticatorByType
  commentId: F:Butterfly.Auth.AuthManager.authenticatorByType
  id: authenticatorByType
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: authenticatorByType
  nameWithType: AuthManager.authenticatorByType
  fullName: Butterfly.Auth.AuthManager.authenticatorByType
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: authenticatorByType
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 131
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly Dictionary<string, IAuthenticator> authenticatorByType
    return:
      type: Dictionary{System.String,Butterfly.Auth.IAuthenticator}
    content.vb: Protected ReadOnly authenticatorByType As Dictionary(Of String, IAuthenticator)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.userRefTokenAuthenticator
  commentId: F:Butterfly.Auth.AuthManager.userRefTokenAuthenticator
  id: userRefTokenAuthenticator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: userRefTokenAuthenticator
  nameWithType: AuthManager.userRefTokenAuthenticator
  fullName: Butterfly.Auth.AuthManager.userRefTokenAuthenticator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: userRefTokenAuthenticator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 133
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly UserRefTokenAuthenticator userRefTokenAuthenticator
    return:
      type: Butterfly.Auth.UserRefTokenAuthenticator
    content.vb: Protected ReadOnly userRefTokenAuthenticator As UserRefTokenAuthenticator
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.shareCodeAuthenticator
  commentId: F:Butterfly.Auth.AuthManager.shareCodeAuthenticator
  id: shareCodeAuthenticator
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: shareCodeAuthenticator
  nameWithType: AuthManager.shareCodeAuthenticator
  fullName: Butterfly.Auth.AuthManager.shareCodeAuthenticator
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: shareCodeAuthenticator
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 134
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected readonly ShareCodeAuthenticator shareCodeAuthenticator
    return:
      type: Butterfly.Auth.ShareCodeAuthenticator
    content.vb: Protected ReadOnly shareCodeAuthenticator As ShareCodeAuthenticator
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.#ctor(Butterfly.Db.IDatabase,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.String,System.Int32,Task},Func{System.String,System.Int32,Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Action{Version})
  commentId: M:Butterfly.Auth.AuthManager.#ctor(Butterfly.Db.IDatabase,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.String,System.Int32,Task},Func{System.String,System.Int32,Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Action{Version})
  id: '#ctor(Butterfly.Db.IDatabase,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}},Func{System.String,System.Int32,Task},Func{System.String,System.Int32,Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task},Action{Version})'
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: AuthManager(IDatabase, Int32, Int32, Int32, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>, Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>, Func<String, Int32, Task>, Func<String, Int32, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Action<Version>)
  nameWithType: AuthManager.AuthManager(IDatabase, Int32, Int32, Int32, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>, Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>, Func<String, Int32, Task>, Func<String, Int32, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Func<System.Collections.Generic.Dictionary<String, Object>, Task>, Action<Version>)
  fullName: Butterfly.Auth.AuthManager.AuthManager(Butterfly.Db.IDatabase, System.Int32, System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Object>>, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Object>>, Func<System.String, System.Int32, Task>, Func<System.String, System.Int32, Task>, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, Task>, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, Task>, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, Task>, Func<System.Collections.Generic.Dictionary<System.String, System.Object>, Task>, Action<Version>)
  type: Constructor
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: .ctor
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 171
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCreate an instance of AuthManager\n"
  example: []
  syntax:
    content: public AuthManager(IDatabase database, int authTokenDurationDays = 90, int resetCodeLength = 6, int resetTokenDurationMinutes = 90, string accountTableName = "account", string accountTableIdFieldName = "id", string accountTableShareCodeFieldName = "share_code", string userTableName = "user", string userTableIdFieldName = "id", string userTableUsernameFieldName = "username", string userTableEmailFieldName = "email", string userTableEmailVerifiedAtFieldName = "email_verified_at", string userTablePhoneFieldName = "phone", string userTablePhoneVerifiedAtFieldName = "phone_verified_at", string userTableSaltFieldName = "salt", string userTablePasswordHashFieldName = "password_hash", string userTableFirstNameFieldName = "first_name", string userTableLastNameFieldName = "last_name", string userTableResetCodeFieldName = "reset_code", string userTableResetCodeExpiresAtFieldName = "reset_code_expires_at", string userTableAccountIdFieldName = "account_id", string userTableRoleFieldName = "role", string defaultRole = null, Func<System.Collections.Generic.Dictionary<string, object>, System.Collections.Generic.Dictionary<string, object>> getExtraAccountInfo = null, Func<System.Collections.Generic.Dictionary<string, object>, System.Collections.Generic.Dictionary<string, object>> getExtraUserInfo = null, Func<string, int, Task> onEmailVerify = null, Func<string, int, Task> onPhoneVerify = null, Func<System.Collections.Generic.Dictionary<string, object>, Task> onRegisterAccount = null, Func<System.Collections.Generic.Dictionary<string, object>, Task> onRegisterUser = null, Func<System.Collections.Generic.Dictionary<string, object>, Task> onForgotPassword = null, Func<System.Collections.Generic.Dictionary<string, object>, Task> onForgotUsername = null, Action<Version> onCheckVersion = null)
    parameters:
    - id: database
      type: Butterfly.Db.IDatabase
      description: ''
    - id: authTokenDurationDays
      type: System.Int32
      description: How long new <xref href="Butterfly.Auth.AuthToken" data-throw-if-not-resolved="false"></xref> instances are valid for
    - id: resetCodeLength
      type: System.Int32
      description: How many digits should a reset code be
    - id: resetTokenDurationMinutes
      type: System.Int32
      description: How long new reset codes are valid for
    - id: accountTableName
      type: System.String
      description: Table name of the account table (default is &quot;account&quot;)
    - id: accountTableIdFieldName
      type: System.String
      description: Field name of the id field on the account table (default is &quot;id&quot;)
    - id: accountTableShareCodeFieldName
      type: System.String
      description: Field name of the share code field on the account table (default is &quot;share_code&quot;)
    - id: userTableName
      type: System.String
      description: Table name of the user table (default is &quot;user&quot;)
    - id: userTableIdFieldName
      type: System.String
      description: Field name of the id field on the user table (default is &quot;id&quot;)
    - id: userTableUsernameFieldName
      type: System.String
      description: Field name of the username field on the user table (default is &quot;username&quot;)
    - id: userTableEmailFieldName
      type: System.String
      description: Field name of the email field on the user table (default is &quot;email&quot;)
    - id: userTableEmailVerifiedAtFieldName
      type: System.String
      description: Field name of the email verified at field on the user table (default is &quot;email_verified_at&quot;)
    - id: userTablePhoneFieldName
      type: System.String
      description: Field name of the phone field on the user table (default is &quot;phone&quot;)
    - id: userTablePhoneVerifiedAtFieldName
      type: System.String
      description: Field name of the phone verified at field on the user table (default is &quot;phone_verified_at&quot;)
    - id: userTableSaltFieldName
      type: System.String
      description: Field name of the salt field on the user table (default is &quot;salt&quot;)
    - id: userTablePasswordHashFieldName
      type: System.String
      description: Field name of the password hash field on the user table (default is &quot;password_hash&quot;)
    - id: userTableFirstNameFieldName
      type: System.String
      description: Field name of the first name field on the user table (default is &quot;first_name&quot;)
    - id: userTableLastNameFieldName
      type: System.String
      description: Field name of the last name field on the user table (default is &quot;last_name&quot;)
    - id: userTableResetCodeFieldName
      type: System.String
      description: Field name of the reset code field on the user table (default is &quot;reset_code&quot;)
    - id: userTableResetCodeExpiresAtFieldName
      type: System.String
      description: Field name of the reset code expires at field on the user table (default is &quot;reset_code_expires_at&quot;)
    - id: userTableAccountIdFieldName
      type: System.String
      description: Field name of the account id field on the user table (default is &quot;account_id&quot;)
    - id: userTableRoleFieldName
      type: System.String
      description: Field name of the role field on the user table (default is &quot;role&quot;)
    - id: defaultRole
      type: System.String
      description: Default value for the role field on a new user
    - id: getExtraAccountInfo
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}
      description: ''
    - id: getExtraUserInfo
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}
      description: ''
    - id: onEmailVerify
      type: Func{System.String,System.Int32,Task}
      description: Callback when <xref href="Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.Object%7d%2cSystem.String%2cSystem.String%2cFunc%7bSystem.String%2cSystem.Int32%2cTask%7d)" data-throw-if-not-resolved="false"></xref> is called with an email address
    - id: onPhoneVerify
      type: Func{System.String,System.Int32,Task}
      description: Callback when <xref href="Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.Object%7d%2cSystem.String%2cSystem.String%2cFunc%7bSystem.String%2cSystem.Int32%2cTask%7d)" data-throw-if-not-resolved="false"></xref> is called with a phone number
    - id: onRegisterAccount
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
      description: Callback when a new account is registered
    - id: onRegisterUser
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
      description: Callback when a new user is registered
    - id: onForgotPassword
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
      description: Callback when a forgot password request is made
    - id: onForgotUsername
      type: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
      description: Callback when a forgot username request is made
    - id: onCheckVersion
      type: Action{Version}
      description: ''
    content.vb: Public Sub New(database As IDatabase, authTokenDurationDays As Integer = 90, resetCodeLength As Integer = 6, resetTokenDurationMinutes As Integer = 90, accountTableName As String = "account", accountTableIdFieldName As String = "id", accountTableShareCodeFieldName As String = "share_code", userTableName As String = "user", userTableIdFieldName As String = "id", userTableUsernameFieldName As String = "username", userTableEmailFieldName As String = "email", userTableEmailVerifiedAtFieldName As String = "email_verified_at", userTablePhoneFieldName As String = "phone", userTablePhoneVerifiedAtFieldName As String = "phone_verified_at", userTableSaltFieldName As String = "salt", userTablePasswordHashFieldName As String = "password_hash", userTableFirstNameFieldName As String = "first_name", userTableLastNameFieldName As String = "last_name", userTableResetCodeFieldName As String = "reset_code", userTableResetCodeExpiresAtFieldName As String = "reset_code_expires_at", userTableAccountIdFieldName As String = "account_id", userTableRoleFieldName As String = "role", defaultRole As String = Nothing, getExtraAccountInfo As Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)) = Nothing, getExtraUserInfo As Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)) = Nothing, onEmailVerify As Func(Of String, Integer, Task) = Nothing, onPhoneVerify As Func(Of String, Integer, Task) = Nothing, onRegisterAccount As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task) = Nothing, onRegisterUser As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task) = Nothing, onForgotPassword As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task) = Nothing, onForgotUsername As Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task) = Nothing, onCheckVersion As Action(Of Version) = Nothing)
  overload: Butterfly.Auth.AuthManager.#ctor*
  nameWithType.vb: AuthManager.AuthManager(IDatabase, Int32, Int32, Int32, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)), Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)), Func(Of String, Int32, Task), Func(Of String, Int32, Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Action(Of Version))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Auth.AuthManager.AuthManager(Butterfly.Db.IDatabase, System.Int32, System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String, Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Object)), Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Object)), Func(Of System.String, System.Int32, Task), Func(Of System.String, System.Int32, Task), Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), Task), Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), Task), Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), Task), Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), Task), Action(Of Version))
  name.vb: AuthManager(IDatabase, Int32, Int32, Int32, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)), Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object)), Func(Of String, Int32, Task), Func(Of String, Int32, Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task), Action(Of Version))
- uid: Butterfly.Auth.AuthManager.VERSION_CLEAN_REGEX
  commentId: F:Butterfly.Auth.AuthManager.VERSION_CLEAN_REGEX
  id: VERSION_CLEAN_REGEX
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: VERSION_CLEAN_REGEX
  nameWithType: AuthManager.VERSION_CLEAN_REGEX
  fullName: Butterfly.Auth.AuthManager.VERSION_CLEAN_REGEX
  type: Field
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: VERSION_CLEAN_REGEX
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 270
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected static readonly Regex VERSION_CLEAN_REGEX
    return:
      type: Regex
    content.vb: Protected Shared ReadOnly VERSION_CLEAN_REGEX As Regex
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Auth.AuthManager.SetupWebApi(Butterfly.Web.WebApi.IWebApi,System.String)
  commentId: M:Butterfly.Auth.AuthManager.SetupWebApi(Butterfly.Web.WebApi.IWebApi,System.String)
  id: SetupWebApi(Butterfly.Web.WebApi.IWebApi,System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: SetupWebApi(IWebApi, String)
  nameWithType: AuthManager.SetupWebApi(IWebApi, String)
  fullName: Butterfly.Auth.AuthManager.SetupWebApi(Butterfly.Web.WebApi.IWebApi, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: SetupWebApi
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 291
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCall to setup a Web API with the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">webApi</code>\n"
  remarks: "\nThe following API URLs will be setup...\n<pre><code>    GET /api/auth/check-username/{username}\n    GET /api/auth/check-auth-token/{id}\n    POST /api/auth/create-anonymous\n    POST /api/auth/register\n    POST /api/auth/login\n    POST /api/auth/forgot-password\n    POST /api/auth/reset-password\n    POST /api/auth/verify-email\n    POST /api/auth/verify-phone</code></pre>\n"
  example: []
  syntax:
    content: public void SetupWebApi(IWebApi webApi, string pathPrefix = "/api/auth")
    parameters:
    - id: webApi
      type: Butterfly.Web.WebApi.IWebApi
      description: ''
    - id: pathPrefix
      type: System.String
      description: Defaults to /api/auth
    content.vb: Public Sub SetupWebApi(webApi As IWebApi, pathPrefix As String = "/api/auth")
  overload: Butterfly.Auth.AuthManager.SetupWebApi*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  commentId: M:Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  id: VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: VerifyAsync(System.Collections.Generic.Dictionary<String, Object>, String, String, Func<String, Int32, Task>)
  nameWithType: AuthManager.VerifyAsync(System.Collections.Generic.Dictionary<String, Object>, String, String, Func<String, Int32, Task>)
  fullName: Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String, Func<System.String, System.Int32, Task>)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: VerifyAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 366
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCall to verify a user&apos;s email or phone\n"
  example: []
  syntax:
    content: public Task VerifyAsync(System.Collections.Generic.Dictionary<string, object> data, string fieldName, string verifiedAtFieldName, Func<string, int, Task> onVerify)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: ''
    - id: fieldName
      type: System.String
      description: ''
    - id: verifiedAtFieldName
      type: System.String
      description: ''
    - id: onVerify
      type: Func{System.String,System.Int32,Task}
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function VerifyAsync(data As System.Collections.Generic.Dictionary(Of String, Object), fieldName As String, verifiedAtFieldName As String, onVerify As Func(Of String, Integer, Task)) As Task
  overload: Butterfly.Auth.AuthManager.VerifyAsync*
  nameWithType.vb: AuthManager.VerifyAsync(System.Collections.Generic.Dictionary(Of String, Object), String, String, Func(Of String, Int32, Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String, Func(Of System.String, System.Int32, Task))
  name.vb: VerifyAsync(System.Collections.Generic.Dictionary(Of String, Object), String, String, Func(Of String, Int32, Task))
- uid: Butterfly.Auth.AuthManager.RegisterAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Butterfly.Auth.AuthManager.RegisterAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: RegisterAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: RegisterAsync(Object, System.Collections.Generic.Dictionary<String, Object>)
  nameWithType: AuthManager.RegisterAsync(Object, System.Collections.Generic.Dictionary<String, Object>)
  fullName: Butterfly.Auth.AuthManager.RegisterAsync(System.Object, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: RegisterAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 396
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nRegisters a new user\n"
  example: []
  syntax:
    content: public Task<UserRefToken> RegisterAsync(dynamic input, System.Collections.Generic.Dictionary<string, object> notifyData = null)
    parameters:
    - id: input
      type: System.Object
      description: ''
    - id: notifyData
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: ''
    return:
      type: Task{Butterfly.Auth.UserRefToken}
      description: ''
    content.vb: Public Function RegisterAsync(input As Object, notifyData As System.Collections.Generic.Dictionary(Of String, Object) = Nothing) As Task(Of UserRefToken)
  overload: Butterfly.Auth.AuthManager.RegisterAsync*
  nameWithType.vb: AuthManager.RegisterAsync(Object, System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Auth.AuthManager.RegisterAsync(System.Object, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: RegisterAsync(Object, System.Collections.Generic.Dictionary(Of String, Object))
- uid: Butterfly.Auth.AuthManager.AuthenticateAsync(System.String,System.String)
  commentId: M:Butterfly.Auth.AuthManager.AuthenticateAsync(System.String,System.String)
  id: AuthenticateAsync(System.String,System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(String, String)
  nameWithType: AuthManager.AuthenticateAsync(String, String)
  fullName: Butterfly.Auth.AuthManager.AuthenticateAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: AuthenticateAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 514
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nValidates the auth token id returning an <xref href=\"Butterfly.Auth.AuthToken\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: public Task<AuthToken> AuthenticateAsync(string authType, string authValue)
    parameters:
    - id: authType
      type: System.String
      description: ''
    - id: authValue
      type: System.String
      description: ''
    return:
      type: Task{Butterfly.Auth.AuthToken}
      description: An <xref href="Butterfly.Auth.AuthToken" data-throw-if-not-resolved="false"></xref> instance
    content.vb: Public Function AuthenticateAsync(authType As String, authValue As String) As Task(Of AuthToken)
  overload: Butterfly.Auth.AuthManager.AuthenticateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.LookupUsernameAsync(System.String,System.String)
  commentId: M:Butterfly.Auth.AuthManager.LookupUsernameAsync(System.String,System.String)
  id: LookupUsernameAsync(System.String,System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: LookupUsernameAsync(String, String)
  nameWithType: AuthManager.LookupUsernameAsync(String, String)
  fullName: Butterfly.Auth.AuthManager.LookupUsernameAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: LookupUsernameAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 525
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nLookup user record from username\n"
  example: []
  syntax:
    content: public Task<System.Collections.Generic.Dictionary<string, object>> LookupUsernameAsync(string username, string fieldNames = "*")
    parameters:
    - id: username
      type: System.String
      description: ''
    - id: fieldNames
      type: System.String
      description: ''
    return:
      type: Task{System.Collections.Generic.Dictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Function LookupUsernameAsync(username As String, fieldNames As String = "*") As Task(Of System.Collections.Generic.Dictionary(Of String, Object))
  overload: Butterfly.Auth.AuthManager.LookupUsernameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.CreateAnonymousUserAsync
  commentId: M:Butterfly.Auth.AuthManager.CreateAnonymousUserAsync
  id: CreateAnonymousUserAsync
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: CreateAnonymousUserAsync()
  nameWithType: AuthManager.CreateAnonymousUserAsync()
  fullName: Butterfly.Auth.AuthManager.CreateAnonymousUserAsync()
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: CreateAnonymousUserAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 538
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCreates an anonymous user and returns a valid <xref href=\"Butterfly.Auth.AuthToken\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<AuthToken> CreateAnonymousUserAsync()
    return:
      type: Task{Butterfly.Auth.AuthToken}
      description: An  <xref href="Butterfly.Auth.AuthToken" data-throw-if-not-resolved="false"></xref> instance created
    content.vb: Public Function CreateAnonymousUserAsync As Task(Of AuthToken)
  overload: Butterfly.Auth.AuthManager.CreateAnonymousUserAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(System.String)
  commentId: M:Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(System.String)
  id: CreateUserRefTokenAsync(System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: CreateUserRefTokenAsync(String)
  nameWithType: AuthManager.CreateUserRefTokenAsync(String)
  fullName: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: CreateUserRefTokenAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 570
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCreate an auth token\n"
  example: []
  syntax:
    content: public Task<UserRefToken> CreateUserRefTokenAsync(string userId)
    parameters:
    - id: userId
      type: System.String
      description: ''
    return:
      type: Task{Butterfly.Auth.UserRefToken}
      description: The AuthToken instance created
    content.vb: Public Function CreateUserRefTokenAsync(userId As String) As Task(Of UserRefToken)
  overload: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(Butterfly.Db.ITransaction,System.String,System.String,System.String,System.String)
  commentId: M:Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(Butterfly.Db.ITransaction,System.String,System.String,System.String,System.String)
  id: CreateUserRefTokenAsync(Butterfly.Db.ITransaction,System.String,System.String,System.String,System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: CreateUserRefTokenAsync(ITransaction, String, String, String, String)
  nameWithType: AuthManager.CreateUserRefTokenAsync(ITransaction, String, String, String, String)
  fullName: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync(Butterfly.Db.ITransaction, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: CreateUserRefTokenAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 594
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected Task<UserRefToken> CreateUserRefTokenAsync(ITransaction transaction, string userId, string username, string role, string accountId)
    parameters:
    - id: transaction
      type: Butterfly.Db.ITransaction
    - id: userId
      type: System.String
    - id: username
      type: System.String
    - id: role
      type: System.String
    - id: accountId
      type: System.String
    return:
      type: Task{Butterfly.Auth.UserRefToken}
    content.vb: Protected Function CreateUserRefTokenAsync(transaction As ITransaction, userId As String, username As String, role As String, accountId As String) As Task(Of UserRefToken)
  overload: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Butterfly.Auth.AuthManager.LoginAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Butterfly.Auth.AuthManager.LoginAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: LoginAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: LoginAsync(System.Collections.Generic.Dictionary<String, Object>)
  nameWithType: AuthManager.LoginAsync(System.Collections.Generic.Dictionary<String, Object>)
  fullName: Butterfly.Auth.AuthManager.LoginAsync(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: LoginAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 605
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nLogs in the user creating a valid <xref href=\"Butterfly.Auth.AuthToken\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<UserRefToken> LoginAsync(System.Collections.Generic.Dictionary<string, object> login)
    parameters:
    - id: login
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: ''
    return:
      type: Task{Butterfly.Auth.UserRefToken}
      description: ''
    content.vb: Public Function LoginAsync(login As System.Collections.Generic.Dictionary(Of String, Object)) As Task(Of UserRefToken)
  overload: Butterfly.Auth.AuthManager.LoginAsync*
  nameWithType.vb: AuthManager.LoginAsync(System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Auth.AuthManager.LoginAsync(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: LoginAsync(System.Collections.Generic.Dictionary(Of String, Object))
- uid: Butterfly.Auth.AuthManager.ForgotPasswordAsync(System.String)
  commentId: M:Butterfly.Auth.AuthManager.ForgotPasswordAsync(System.String)
  id: ForgotPasswordAsync(System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: ForgotPasswordAsync(String)
  nameWithType: AuthManager.ForgotPasswordAsync(String)
  fullName: Butterfly.Auth.AuthManager.ForgotPasswordAsync(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: ForgotPasswordAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 627
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nCreates a reset code and invokes <xref href=\"Butterfly.Auth.AuthManager.onForgotPassword\" data-throw-if-not-resolved=\"false\"></xref> to send the reset code to the user\n"
  example: []
  syntax:
    content: public Task ForgotPasswordAsync(string username)
    parameters:
    - id: username
      type: System.String
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function ForgotPasswordAsync(username As String) As Task
  overload: Butterfly.Auth.AuthManager.ForgotPasswordAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Butterfly.Auth.AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: ResetPasswordAsync(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: ResetPasswordAsync(System.Collections.Generic.Dictionary<String, Object>)
  nameWithType: AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary<String, Object>)
  fullName: Butterfly.Auth.AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: ResetPasswordAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 643
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nResets the user&apos;s password if a valid reset code is included\n"
  example: []
  syntax:
    content: public Task<AuthToken> ResetPasswordAsync(System.Collections.Generic.Dictionary<string, object> resetPassword)
    parameters:
    - id: resetPassword
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: ''
    return:
      type: Task{Butterfly.Auth.AuthToken}
      description: ''
    content.vb: Public Function ResetPasswordAsync(resetPassword As System.Collections.Generic.Dictionary(Of String, Object)) As Task(Of AuthToken)
  overload: Butterfly.Auth.AuthManager.ResetPasswordAsync*
  nameWithType.vb: AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Auth.AuthManager.ResetPasswordAsync(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: ResetPasswordAsync(System.Collections.Generic.Dictionary(Of String, Object))
- uid: Butterfly.Auth.AuthManager.ForgotUsernameAsync(System.String)
  commentId: M:Butterfly.Auth.AuthManager.ForgotUsernameAsync(System.String)
  id: ForgotUsernameAsync(System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: ForgotUsernameAsync(String)
  nameWithType: AuthManager.ForgotUsernameAsync(String)
  fullName: Butterfly.Auth.AuthManager.ForgotUsernameAsync(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: ForgotUsernameAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 676
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  summary: "\nInvokes <xref href=\"Butterfly.Auth.AuthManager.onForgotUsername\" data-throw-if-not-resolved=\"false\"></xref> with a list of matching usernames\n"
  example: []
  syntax:
    content: public Task ForgotUsernameAsync(string contact)
    parameters:
    - id: contact
      type: System.String
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function ForgotUsernameAsync(contact As String) As Task
  overload: Butterfly.Auth.AuthManager.ForgotUsernameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Auth.AuthManager.CreateResetCodeAsync(System.String)
  commentId: M:Butterfly.Auth.AuthManager.CreateResetCodeAsync(System.String)
  id: CreateResetCodeAsync(System.String)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: CreateResetCodeAsync(String)
  nameWithType: AuthManager.CreateResetCodeAsync(String)
  fullName: Butterfly.Auth.AuthManager.CreateResetCodeAsync(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: CreateResetCodeAsync
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 704
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected Task<string> CreateResetCodeAsync(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: Task{System.String}
    content.vb: Protected Function CreateResetCodeAsync(userId As String) As Task(Of String)
  overload: Butterfly.Auth.AuthManager.CreateResetCodeAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Butterfly.Auth.AuthManager.ConvertInputToDict(System.Object)
  commentId: M:Butterfly.Auth.AuthManager.ConvertInputToDict(System.Object)
  id: ConvertInputToDict(System.Object)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: ConvertInputToDict(Object)
  nameWithType: AuthManager.ConvertInputToDict(Object)
  fullName: Butterfly.Auth.AuthManager.ConvertInputToDict(System.Object)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: ConvertInputToDict
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 720
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: protected System.Collections.Generic.Dictionary<string, object> ConvertInputToDict(dynamic input)
    parameters:
    - id: input
      type: System.Object
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Function ConvertInputToDict(input As Object) As System.Collections.Generic.Dictionary(Of String, Object)
  overload: Butterfly.Auth.AuthManager.ConvertInputToDict*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Butterfly.Auth.AuthManager.GetUserRefToken(Butterfly.Web.WebApi.IWebRequest)
  commentId: M:Butterfly.Auth.AuthManager.GetUserRefToken(Butterfly.Web.WebApi.IWebRequest)
  id: GetUserRefToken(Butterfly.Web.WebApi.IWebRequest)
  parent: Butterfly.Auth.AuthManager
  langs:
  - csharp
  - vb
  name: GetUserRefToken(IWebRequest)
  nameWithType: AuthManager.GetUserRefToken(IWebRequest)
  fullName: Butterfly.Auth.AuthManager.GetUserRefToken(Butterfly.Web.WebApi.IWebRequest)
  type: Method
  source:
    remote:
      path: Butterfly.Auth/AuthManager.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-auth.git
    id: GetUserRefToken
    path: ../Butterfly.Auth/AuthManager.cs
    startLine: 737
  assemblies:
  - Butterfly.Auth
  namespace: Butterfly.Auth
  syntax:
    content: public Task<UserRefToken> GetUserRefToken(IWebRequest req)
    parameters:
    - id: req
      type: Butterfly.Web.WebApi.IWebRequest
    return:
      type: Task{Butterfly.Auth.UserRefToken}
    content.vb: Public Function GetUserRefToken(req As IWebRequest) As Task(Of UserRefToken)
  overload: Butterfly.Auth.AuthManager.GetUserRefToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Butterfly.Auth
  commentId: N:Butterfly.Auth
  name: Butterfly.Auth
  nameWithType: Butterfly.Auth
  fullName: Butterfly.Auth
- uid: System.Object
  commentId: T:System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Logger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: Logger
- uid: Butterfly.Db.IDatabase
  commentId: T:Butterfly.Db.IDatabase
  parent: Butterfly.Db
  name: IDatabase
  nameWithType: IDatabase
  fullName: Butterfly.Db.IDatabase
- uid: Butterfly.Db
  commentId: N:Butterfly.Db
  name: Butterfly.Db
  nameWithType: Butterfly.Db
  fullName: Butterfly.Db
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: '!:Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}}'
  definition: Func`2
  name: Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>
  nameWithType: Func<System.Collections.Generic.Dictionary<String, Object>, System.Collections.Generic.Dictionary<String, Object>>
  fullName: Func<System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object))
  fullName.vb: Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Func(Of System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Object))
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Func{System.String,System.Int32,Task}
  commentId: '!:Func{System.String,System.Int32,Task}'
  definition: Func`3
  name: Func<String, Int32, Task>
  nameWithType: Func<String, Int32, Task>
  fullName: Func<System.String, System.Int32, Task>
  nameWithType.vb: Func(Of String, Int32, Task)
  fullName.vb: Func(Of System.String, System.Int32, Task)
  name.vb: Func(Of String, Int32, Task)
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`3
  isExternal: true
  name: Func<, , >
  nameWithType: Func<, , >
  fullName: Func<, , >
  nameWithType.vb: Func(Of , , )
  fullName.vb: Func(Of , , )
  name.vb: Func(Of , , )
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}
  commentId: '!:Func{System.Collections.Generic.Dictionary{System.String,System.Object},Task}'
  definition: Func`2
  name: Func<System.Collections.Generic.Dictionary<String, Object>, Task>
  nameWithType: Func<System.Collections.Generic.Dictionary<String, Object>, Task>
  fullName: Func<System.Collections.Generic.Dictionary<System.String, System.Object>, Task>
  nameWithType.vb: Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  fullName.vb: Func(Of System.Collections.Generic.Dictionary(Of System.String, System.Object), Task)
  name.vb: Func(Of System.Collections.Generic.Dictionary(Of String, Object), Task)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{Version}
  commentId: '!:Action{Version}'
  definition: Action`1
  name: Action<Version>
  nameWithType: Action<Version>
  fullName: Action<Version>
  nameWithType.vb: Action(Of Version)
  fullName.vb: Action(Of Version)
  name.vb: Action(Of Version)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Version
    name: Version
    nameWithType: Version
    fullName: Version
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Version
    name: Version
    nameWithType: Version
    fullName: Version
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IFieldValidator
  isExternal: true
  name: IFieldValidator
  nameWithType: IFieldValidator
  fullName: IFieldValidator
- uid: Dictionary{System.String,Butterfly.Auth.IAuthenticator}
  commentId: '!:Dictionary{System.String,Butterfly.Auth.IAuthenticator}'
  definition: Dictionary`2
  name: Dictionary<String, IAuthenticator>
  nameWithType: Dictionary<String, IAuthenticator>
  fullName: Dictionary<System.String, Butterfly.Auth.IAuthenticator>
  nameWithType.vb: Dictionary(Of String, IAuthenticator)
  fullName.vb: Dictionary(Of System.String, Butterfly.Auth.IAuthenticator)
  name.vb: Dictionary(Of String, IAuthenticator)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Butterfly.Auth.IAuthenticator
    name: IAuthenticator
    nameWithType: IAuthenticator
    fullName: Butterfly.Auth.IAuthenticator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Butterfly.Auth.IAuthenticator
    name: IAuthenticator
    nameWithType: IAuthenticator
    fullName: Butterfly.Auth.IAuthenticator
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  commentId: '!:Dictionary`2'
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.UserRefTokenAuthenticator
  commentId: T:Butterfly.Auth.UserRefTokenAuthenticator
  parent: Butterfly.Auth
  name: UserRefTokenAuthenticator
  nameWithType: UserRefTokenAuthenticator
  fullName: Butterfly.Auth.UserRefTokenAuthenticator
- uid: Butterfly.Auth.ShareCodeAuthenticator
  commentId: T:Butterfly.Auth.ShareCodeAuthenticator
  parent: Butterfly.Auth
  name: ShareCodeAuthenticator
  nameWithType: ShareCodeAuthenticator
  fullName: Butterfly.Auth.ShareCodeAuthenticator
- uid: Butterfly.Auth.AuthToken
  commentId: T:Butterfly.Auth.AuthToken
  parent: Butterfly.Auth
  name: AuthToken
  nameWithType: AuthToken
  fullName: Butterfly.Auth.AuthToken
- uid: Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  commentId: M:Butterfly.Auth.AuthManager.VerifyAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,Func{System.String,System.Int32,Task})
  isExternal: true
- uid: Butterfly.Auth.AuthManager.#ctor*
  commentId: Overload:Butterfly.Auth.AuthManager.#ctor
  name: AuthManager
  nameWithType: AuthManager.AuthManager
  fullName: Butterfly.Auth.AuthManager.AuthManager
- uid: Regex
  commentId: '!:Regex'
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: Regex
- uid: Butterfly.Auth.AuthManager.SetupWebApi*
  commentId: Overload:Butterfly.Auth.AuthManager.SetupWebApi
  name: SetupWebApi
  nameWithType: AuthManager.SetupWebApi
  fullName: Butterfly.Auth.AuthManager.SetupWebApi
- uid: Butterfly.Web.WebApi.IWebApi
  commentId: T:Butterfly.Web.WebApi.IWebApi
  parent: Butterfly.Web.WebApi
  name: IWebApi
  nameWithType: IWebApi
  fullName: Butterfly.Web.WebApi.IWebApi
- uid: Butterfly.Web.WebApi
  commentId: N:Butterfly.Web.WebApi
  name: Butterfly.Web.WebApi
  nameWithType: Butterfly.Web.WebApi
  fullName: Butterfly.Web.WebApi
- uid: Butterfly.Auth.AuthManager.VerifyAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.VerifyAsync
  name: VerifyAsync
  nameWithType: AuthManager.VerifyAsync
  fullName: Butterfly.Auth.AuthManager.VerifyAsync
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: System.Collections.Generic.Dictionary<String, Object>
  nameWithType: System.Collections.Generic.Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: System.Collections.Generic.Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: System.Collections.Generic.Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: System.Collections.Generic.Dictionary<, >
  nameWithType: System.Collections.Generic.Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: System.Collections.Generic.Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: System.Collections.Generic.Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.AuthManager.RegisterAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.RegisterAsync
  name: RegisterAsync
  nameWithType: AuthManager.RegisterAsync
  fullName: Butterfly.Auth.AuthManager.RegisterAsync
- uid: Task{Butterfly.Auth.UserRefToken}
  commentId: '!:Task{Butterfly.Auth.UserRefToken}'
  definition: Task`1
  name: Task<UserRefToken>
  nameWithType: Task<UserRefToken>
  fullName: Task<Butterfly.Auth.UserRefToken>
  nameWithType.vb: Task(Of UserRefToken)
  fullName.vb: Task(Of Butterfly.Auth.UserRefToken)
  name.vb: Task(Of UserRefToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Butterfly.Auth.UserRefToken
    name: UserRefToken
    nameWithType: UserRefToken
    fullName: Butterfly.Auth.UserRefToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Butterfly.Auth.UserRefToken
    name: UserRefToken
    nameWithType: UserRefToken
    fullName: Butterfly.Auth.UserRefToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.AuthManager.AuthenticateAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.AuthenticateAsync
  name: AuthenticateAsync
  nameWithType: AuthManager.AuthenticateAsync
  fullName: Butterfly.Auth.AuthManager.AuthenticateAsync
- uid: Task{Butterfly.Auth.AuthToken}
  commentId: '!:Task{Butterfly.Auth.AuthToken}'
  definition: Task`1
  name: Task<AuthToken>
  nameWithType: Task<AuthToken>
  fullName: Task<Butterfly.Auth.AuthToken>
  nameWithType.vb: Task(Of AuthToken)
  fullName.vb: Task(Of Butterfly.Auth.AuthToken)
  name.vb: Task(Of AuthToken)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Butterfly.Auth.AuthToken
    name: AuthToken
    nameWithType: AuthToken
    fullName: Butterfly.Auth.AuthToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.AuthManager.LookupUsernameAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.LookupUsernameAsync
  name: LookupUsernameAsync
  nameWithType: AuthManager.LookupUsernameAsync
  fullName: Butterfly.Auth.AuthManager.LookupUsernameAsync
- uid: Task{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: '!:Task{System.Collections.Generic.Dictionary{System.String,System.Object}}'
  definition: Task`1
  name: Task<System.Collections.Generic.Dictionary<String, Object>>
  nameWithType: Task<System.Collections.Generic.Dictionary<String, Object>>
  fullName: Task<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: Task(Of System.Collections.Generic.Dictionary(Of String, Object))
  fullName.vb: Task(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Task(Of System.Collections.Generic.Dictionary(Of String, Object))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.AuthManager.CreateAnonymousUserAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.CreateAnonymousUserAsync
  name: CreateAnonymousUserAsync
  nameWithType: AuthManager.CreateAnonymousUserAsync
  fullName: Butterfly.Auth.AuthManager.CreateAnonymousUserAsync
- uid: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.CreateUserRefTokenAsync
  name: CreateUserRefTokenAsync
  nameWithType: AuthManager.CreateUserRefTokenAsync
  fullName: Butterfly.Auth.AuthManager.CreateUserRefTokenAsync
- uid: Butterfly.Db.ITransaction
  commentId: T:Butterfly.Db.ITransaction
  parent: Butterfly.Db
  name: ITransaction
  nameWithType: ITransaction
  fullName: Butterfly.Db.ITransaction
- uid: Butterfly.Auth.AuthManager.LoginAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.LoginAsync
  name: LoginAsync
  nameWithType: AuthManager.LoginAsync
  fullName: Butterfly.Auth.AuthManager.LoginAsync
- uid: Butterfly.Auth.AuthManager.onForgotPassword
  commentId: F:Butterfly.Auth.AuthManager.onForgotPassword
  isExternal: true
- uid: Butterfly.Auth.AuthManager.ForgotPasswordAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.ForgotPasswordAsync
  name: ForgotPasswordAsync
  nameWithType: AuthManager.ForgotPasswordAsync
  fullName: Butterfly.Auth.AuthManager.ForgotPasswordAsync
- uid: Butterfly.Auth.AuthManager.ResetPasswordAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.ResetPasswordAsync
  name: ResetPasswordAsync
  nameWithType: AuthManager.ResetPasswordAsync
  fullName: Butterfly.Auth.AuthManager.ResetPasswordAsync
- uid: Butterfly.Auth.AuthManager.onForgotUsername
  commentId: F:Butterfly.Auth.AuthManager.onForgotUsername
  isExternal: true
- uid: Butterfly.Auth.AuthManager.ForgotUsernameAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.ForgotUsernameAsync
  name: ForgotUsernameAsync
  nameWithType: AuthManager.ForgotUsernameAsync
  fullName: Butterfly.Auth.AuthManager.ForgotUsernameAsync
- uid: Butterfly.Auth.AuthManager.CreateResetCodeAsync*
  commentId: Overload:Butterfly.Auth.AuthManager.CreateResetCodeAsync
  name: CreateResetCodeAsync
  nameWithType: AuthManager.CreateResetCodeAsync
  fullName: Butterfly.Auth.AuthManager.CreateResetCodeAsync
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Auth.AuthManager.ConvertInputToDict*
  commentId: Overload:Butterfly.Auth.AuthManager.ConvertInputToDict
  name: ConvertInputToDict
  nameWithType: AuthManager.ConvertInputToDict
  fullName: Butterfly.Auth.AuthManager.ConvertInputToDict
- uid: Butterfly.Auth.AuthManager.GetUserRefToken*
  commentId: Overload:Butterfly.Auth.AuthManager.GetUserRefToken
  name: GetUserRefToken
  nameWithType: AuthManager.GetUserRefToken
  fullName: Butterfly.Auth.AuthManager.GetUserRefToken
- uid: Butterfly.Web.WebApi.IWebRequest
  commentId: T:Butterfly.Web.WebApi.IWebRequest
  parent: Butterfly.Web.WebApi
  name: IWebRequest
  nameWithType: IWebRequest
  fullName: Butterfly.Web.WebApi.IWebRequest
shouldSkipMarkup: true
